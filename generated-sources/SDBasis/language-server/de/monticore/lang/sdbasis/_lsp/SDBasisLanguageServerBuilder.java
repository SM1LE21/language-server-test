/* generated by template _lsp.LanguageServerBuilder*/

package de.monticore.lang.sdbasis._lsp;

import de.mclsg.LanguageServerBuilder;
import de.monticore.lang.sdbasis._symboltable.SDBasisGlobalScope;
import de.monticore.lang.sdbasis._lsp.language_access.*;
import de.mclsg.lsp.CommonLanguageServer;
import de.mclsg.lsp.CommonTextDocumentService;
import de.mclsg.lsp.ISymbolUsageResolutionProvider;
import de.mclsg.lsp.document_management.DocumentManager;
import de.mclsg.lsp.extensions.syntax_highlighting.SyntaxHighlightingService;
import org.eclipse.lsp4j.ServerCapabilities;
import org.eclipse.lsp4j.TextDocumentSyncKind;
import org.eclipse.lsp4j.services.WorkspaceService;
import de.monticore.io.paths.MCPath;


public  class SDBasisLanguageServerBuilder implements LanguageServerBuilder {
  protected DocumentManager documentManager = null;
  protected MCPath modelPath = null;
  protected SDBasisScopeManager scopeManager = null;
  protected ISymbolUsageResolutionProvider symbolUsageResolutionProvider = null;


  public SDBasisLanguageServerBuilder documentManager(DocumentManager documentManager){
    this.documentManager = documentManager;
    return this;
  }

  public SDBasisLanguageServerBuilder modelPath(MCPath modelPath){
    this.modelPath = modelPath;
    return this;
  }

  public SDBasisLanguageServerBuilder scopeManager(SDBasisScopeManager scopeManager){
    this.scopeManager = scopeManager;
    return this;
  }

  public SDBasisLanguageServerBuilder symbolUsageResolutionProvider(ISymbolUsageResolutionProvider symbolUsageResolutionProvider){
    this.symbolUsageResolutionProvider = symbolUsageResolutionProvider;
    return this;
  }

  public SDBasisLanguageServer build(){
    return new SDBasisLanguageServer(
      documentManager == null ? new DocumentManager() : documentManager,
      modelPath == null ? new MCPath() : modelPath,
      scopeManager == null ? new  SDBasisScopeManager() : scopeManager,
      symbolUsageResolutionProvider == null ? new SDBasisSymbolUsageResolutionProvider() : symbolUsageResolutionProvider
    );
  }

}