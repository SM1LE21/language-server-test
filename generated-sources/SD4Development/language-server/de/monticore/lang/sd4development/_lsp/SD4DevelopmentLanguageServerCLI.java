/* generated by template _lsp.LanguageServerCLI*/

package de.monticore.lang.sd4development._lsp;

import de.mclsg.CommandLineUtil;
import de.mclsg.LanguageServerOptions;
import de.mclsg.lsp.CommonLanguageServer;
import de.mclsg.lsp.LanguageServerCLI;
import de.mclsg.lsp.document_management.DocumentManager;
import de.monticore.io.paths.MCPath;
import de.mclsg.lsp.MarkupHighlightingUtil;

import java.nio.file.Paths;

public class SD4DevelopmentLanguageServerCLI extends LanguageServerCLI {
    public static void main(final String[] args) throws Exception {
		    LanguageServerOptions options = CommandLineUtil.parseOptions(args);
        if(options == null){
            if("true".equals(System.getProperty("LSP_SYSTEM_EXIT", "true"))){
                System.exit(1);
            }
            return;
        }
        if(!options.isHelp()){
            SD4DevelopmentLanguageServer languageServer = new SD4DevelopmentLanguageServerBuilder()
                .modelPath(new MCPath(options.getModelPaths()))
                .build();

            if(options.getHtmlPrintingModelPath().isPresent()){
                // Print model as html
                String p = options.getHtmlPrintingModelPath().get();
                System.out.println(MarkupHighlightingUtil.getHighlightedHtmlForModel(languageServer, Paths.get(p)));
            } else if(options.getMarkdownPrintingPath().isPresent()){
                // Print markdown with replaced code blocks for this language
                String p = options.getMarkdownPrintingPath().get();
                System.out.println(MarkupHighlightingUtil.highlightCodeBlocksInMarkdown(
                    languageServer,
                    "sd",
                    "SD4Development",
                    Paths.get(p))
                );
            } else{
                // Start language server

                LanguageServerCLI.start(languageServer, options);
                if(!options.isWebsocket()){
                    languageServer.exit();
                }
            }
        }
    }
}
