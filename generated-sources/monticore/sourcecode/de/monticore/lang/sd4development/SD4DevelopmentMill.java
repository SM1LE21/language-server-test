/* generated from model SD4Development */
/* generated by template cd2java.Class*/

/* (c) https://github.com/MontiCore/monticore */

/* Hookpoint: ClassContent:addComment */

/* generated by template cd2java.Package*/
package de.monticore.lang.sd4development;


/* generated by template cd2java.Imports*/

import java.util.*;
import java.util.function.*;
import java.util.stream.Stream;
import de.se_rwth.commons.logging.Log;
import de.se_rwth.commons.SourcePosition;



/* Hookpoint: ClassContent:Imports */



/* Hookpoint: ClassContent:Annotations */

 public  class SD4DevelopmentMill  {

/* Hookpoint: ClassContent:Elements */

    /* generated by template cd2java.Attribute*/

/* Hookpoint: AttributeContent:Annotations */
 protected  static  SD4DevelopmentMill mill
  
;

    /* generated by template cd2java.Attribute*/

/* Hookpoint: AttributeContent:Annotations */
 protected  static  SD4DevelopmentMill millASTSDCallBuilder
  
;

    /* generated by template cd2java.Attribute*/

/* Hookpoint: AttributeContent:Annotations */
 protected  static  SD4DevelopmentMill millASTSDNewBuilder
  
;

    /* generated by template cd2java.Attribute*/

/* Hookpoint: AttributeContent:Annotations */
 protected  static  SD4DevelopmentMill millASTSDReturnBuilder
  
;

    /* generated by template cd2java.Attribute*/

/* Hookpoint: AttributeContent:Annotations */
 protected  static  SD4DevelopmentMill millASTSDThrowBuilder
  
;

    /* generated by template cd2java.Attribute*/

/* Hookpoint: AttributeContent:Annotations */
 protected  static  SD4DevelopmentMill millASTSDEndCallBuilder
  
;

    /* generated by template cd2java.Attribute*/

/* Hookpoint: AttributeContent:Annotations */
 protected  static  SD4DevelopmentMill millASTSDEndCallArrowBuilder
  
;

    /* generated by template cd2java.Attribute*/

/* Hookpoint: AttributeContent:Annotations */
 protected  static  SD4DevelopmentMill millASTSDIncompleteExpressionBuilder
  
;

    /* generated by template cd2java.Attribute*/

/* Hookpoint: AttributeContent:Annotations */
 protected  static  SD4DevelopmentMill millASTSDClassBuilder
  
;

    /* generated by template cd2java.Attribute*/

/* Hookpoint: AttributeContent:Annotations */
 protected  static  SD4DevelopmentMill millASTSDConditionBuilder
  
;

    /* generated by template cd2java.Attribute*/

/* Hookpoint: AttributeContent:Annotations */
 protected  static  SD4DevelopmentMill millASTSDVariableDeclarationBuilder
  
;

    /* generated by template cd2java.Attribute*/

/* Hookpoint: AttributeContent:Annotations */
 protected  static  SD4DevelopmentMill millSD4DevelopmentTraverserImplementation
  
;

    /* generated by template cd2java.Attribute*/

/* Hookpoint: AttributeContent:Annotations */
 protected  static  SD4DevelopmentMill millSD4DevelopmentInheritanceHandler
  
;

    /* generated by template cd2java.Attribute*/

/* Hookpoint: AttributeContent:Annotations */
 protected  static  SD4DevelopmentMill millSD4DevelopmentScope
  
;

    /* generated by template cd2java.Attribute*/

/* Hookpoint: AttributeContent:Annotations */
 protected  static  SD4DevelopmentMill millSD4DevelopmentScopesGenitorDelegator
  
;

    /* generated by template cd2java.Attribute*/

/* Hookpoint: AttributeContent:Annotations */
 protected  static  SD4DevelopmentMill millSD4DevelopmentArtifactScope
  
;

    /* generated by template cd2java.Attribute*/

/* Hookpoint: AttributeContent:Annotations */
 protected  static  SD4DevelopmentMill millSD4DevelopmentGlobalScope
  
;

    /* generated by template cd2java.Attribute*/

/* Hookpoint: AttributeContent:Annotations */
 protected  static  SD4DevelopmentMill millSD4DevelopmentScopesGenitor
  
;

    /* generated by template cd2java.Attribute*/

/* Hookpoint: AttributeContent:Annotations */
 protected  static  SD4DevelopmentMill millSD4DevelopmentFullPrettyPrinter
  
;

    /* generated by template cd2java.Attribute*/

/* Hookpoint: AttributeContent:Annotations */
 protected  de.monticore.lang.sd4development._prettyprint.SD4DevelopmentFullPrettyPrinter fullPrettyPrinter
  
;

    /* generated by template cd2java.Attribute*/

/* Hookpoint: AttributeContent:Annotations */
 protected  static  SD4DevelopmentMill millSD4DevelopmentTypeDispatcher
  
;

    /* generated by template cd2java.Attribute*/

/* Hookpoint: AttributeContent:Annotations */
 protected  de.monticore.lang.sd4development._util.SD4DevelopmentTypeDispatcher typeDispatcher
  
;

    /* generated by template cd2java.Attribute*/

/* Hookpoint: AttributeContent:Annotations */
 protected  de.monticore.lang.sd4development._symboltable.ISD4DevelopmentGlobalScope sD4DevelopmentGlobalScope
  
;

    /* generated by template cd2java.Attribute*/

/* Hookpoint: AttributeContent:Annotations */
 protected  static  SD4DevelopmentMill millSD4DevelopmentParser
  
;


    /* generated by template cd2java.Constructor*/
 protected  SD4DevelopmentMill()
 {
  /* generated by template cd2java.EmptyBody*/
// empty body

}


    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  static  SD4DevelopmentMill getMill ()

 {
    /* generated by template mill.GetMillMethod*/

  if (mill == null) {
    mill = new SD4DevelopmentMill();
  }
  return mill;
}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  static  void init ()

 {
    /* generated by template mill.InitMethod*/

    mill = new SD4DevelopmentMill();
    de.monticore.lang.sdbasis.SDBasisMill.initMe(new de.monticore.lang.sd4development._auxiliary.SDBasisMillForSD4Development());
    de.monticore.literals.mccommonliterals.MCCommonLiteralsMill.initMe(new de.monticore.lang.sd4development._auxiliary.MCCommonLiteralsMillForSD4Development());
    de.monticore.expressions.commonexpressions.CommonExpressionsMill.initMe(new de.monticore.lang.sd4development._auxiliary.CommonExpressionsMillForSD4Development());
    de.monticore.ocl.oclexpressions.OCLExpressionsMill.initMe(new de.monticore.lang.sd4development._auxiliary.OCLExpressionsMillForSD4Development());
    de.monticore.symbols.oosymbols.OOSymbolsMill.initMe(new de.monticore.lang.sd4development._auxiliary.OOSymbolsMillForSD4Development());
    de.monticore.types.mcbasictypes.MCBasicTypesMill.initMe(new de.monticore.lang.sd4development._auxiliary.MCBasicTypesMillForSD4Development());
    de.monticore.symbols.basicsymbols.BasicSymbolsMill.initMe(new de.monticore.lang.sd4development._auxiliary.BasicSymbolsMillForSD4Development());
    de.monticore.expressions.expressionsbasis.ExpressionsBasisMill.initMe(new de.monticore.lang.sd4development._auxiliary.ExpressionsBasisMillForSD4Development());
    de.monticore.umlstereotype.UMLStereotypeMill.initMe(new de.monticore.lang.sd4development._auxiliary.UMLStereotypeMillForSD4Development());
    de.monticore.mcbasics.MCBasicsMill.initMe(new de.monticore.lang.sd4development._auxiliary.MCBasicsMillForSD4Development());
    de.monticore.literals.mcliteralsbasis.MCLiteralsBasisMill.initMe(new de.monticore.lang.sd4development._auxiliary.MCLiteralsBasisMillForSD4Development());

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  static  de.monticore.lang.sd4development._ast.ASTSDCallBuilder sDCallBuilder ()

 {
    /* generated by template mill.BuilderMethod*/

  if (millASTSDCallBuilder == null) {
    millASTSDCallBuilder = getMill();
  }
  return millASTSDCallBuilder._sDCallBuilder();

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 protected  de.monticore.lang.sd4development._ast.ASTSDCallBuilder _sDCallBuilder ()

 {
    /* generated by template mill.ProtectedBuilderMethod*/

  return new de.monticore.lang.sd4development._ast.ASTSDCallBuilder();
}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  static  de.monticore.lang.sd4development._ast.ASTSDNewBuilder sDNewBuilder ()

 {
    /* generated by template mill.BuilderMethod*/

  if (millASTSDNewBuilder == null) {
    millASTSDNewBuilder = getMill();
  }
  return millASTSDNewBuilder._sDNewBuilder();

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 protected  de.monticore.lang.sd4development._ast.ASTSDNewBuilder _sDNewBuilder ()

 {
    /* generated by template mill.ProtectedBuilderMethod*/

  return new de.monticore.lang.sd4development._ast.ASTSDNewBuilder();
}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  static  de.monticore.lang.sd4development._ast.ASTSDReturnBuilder sDReturnBuilder ()

 {
    /* generated by template mill.BuilderMethod*/

  if (millASTSDReturnBuilder == null) {
    millASTSDReturnBuilder = getMill();
  }
  return millASTSDReturnBuilder._sDReturnBuilder();

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 protected  de.monticore.lang.sd4development._ast.ASTSDReturnBuilder _sDReturnBuilder ()

 {
    /* generated by template mill.ProtectedBuilderMethod*/

  return new de.monticore.lang.sd4development._ast.ASTSDReturnBuilder();
}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  static  de.monticore.lang.sd4development._ast.ASTSDThrowBuilder sDThrowBuilder ()

 {
    /* generated by template mill.BuilderMethod*/

  if (millASTSDThrowBuilder == null) {
    millASTSDThrowBuilder = getMill();
  }
  return millASTSDThrowBuilder._sDThrowBuilder();

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 protected  de.monticore.lang.sd4development._ast.ASTSDThrowBuilder _sDThrowBuilder ()

 {
    /* generated by template mill.ProtectedBuilderMethod*/

  return new de.monticore.lang.sd4development._ast.ASTSDThrowBuilder();
}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  static  de.monticore.lang.sd4development._ast.ASTSDEndCallBuilder sDEndCallBuilder ()

 {
    /* generated by template mill.BuilderMethod*/

  if (millASTSDEndCallBuilder == null) {
    millASTSDEndCallBuilder = getMill();
  }
  return millASTSDEndCallBuilder._sDEndCallBuilder();

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 protected  de.monticore.lang.sd4development._ast.ASTSDEndCallBuilder _sDEndCallBuilder ()

 {
    /* generated by template mill.ProtectedBuilderMethod*/

  return new de.monticore.lang.sd4development._ast.ASTSDEndCallBuilder();
}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  static  de.monticore.lang.sd4development._ast.ASTSDEndCallArrowBuilder sDEndCallArrowBuilder ()

 {
    /* generated by template mill.BuilderMethod*/

  if (millASTSDEndCallArrowBuilder == null) {
    millASTSDEndCallArrowBuilder = getMill();
  }
  return millASTSDEndCallArrowBuilder._sDEndCallArrowBuilder();

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 protected  de.monticore.lang.sd4development._ast.ASTSDEndCallArrowBuilder _sDEndCallArrowBuilder ()

 {
    /* generated by template mill.ProtectedBuilderMethod*/

  return new de.monticore.lang.sd4development._ast.ASTSDEndCallArrowBuilder();
}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  static  de.monticore.lang.sd4development._ast.ASTSDIncompleteExpressionBuilder sDIncompleteExpressionBuilder ()

 {
    /* generated by template mill.BuilderMethod*/

  if (millASTSDIncompleteExpressionBuilder == null) {
    millASTSDIncompleteExpressionBuilder = getMill();
  }
  return millASTSDIncompleteExpressionBuilder._sDIncompleteExpressionBuilder();

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 protected  de.monticore.lang.sd4development._ast.ASTSDIncompleteExpressionBuilder _sDIncompleteExpressionBuilder ()

 {
    /* generated by template mill.ProtectedBuilderMethod*/

  return new de.monticore.lang.sd4development._ast.ASTSDIncompleteExpressionBuilder();
}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  static  de.monticore.lang.sd4development._ast.ASTSDClassBuilder sDClassBuilder ()

 {
    /* generated by template mill.BuilderMethod*/

  if (millASTSDClassBuilder == null) {
    millASTSDClassBuilder = getMill();
  }
  return millASTSDClassBuilder._sDClassBuilder();

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 protected  de.monticore.lang.sd4development._ast.ASTSDClassBuilder _sDClassBuilder ()

 {
    /* generated by template mill.ProtectedBuilderMethod*/

  return new de.monticore.lang.sd4development._ast.ASTSDClassBuilder();
}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  static  de.monticore.lang.sd4development._ast.ASTSDConditionBuilder sDConditionBuilder ()

 {
    /* generated by template mill.BuilderMethod*/

  if (millASTSDConditionBuilder == null) {
    millASTSDConditionBuilder = getMill();
  }
  return millASTSDConditionBuilder._sDConditionBuilder();

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 protected  de.monticore.lang.sd4development._ast.ASTSDConditionBuilder _sDConditionBuilder ()

 {
    /* generated by template mill.ProtectedBuilderMethod*/

  return new de.monticore.lang.sd4development._ast.ASTSDConditionBuilder();
}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  static  de.monticore.lang.sd4development._ast.ASTSDVariableDeclarationBuilder sDVariableDeclarationBuilder ()

 {
    /* generated by template mill.BuilderMethod*/

  if (millASTSDVariableDeclarationBuilder == null) {
    millASTSDVariableDeclarationBuilder = getMill();
  }
  return millASTSDVariableDeclarationBuilder._sDVariableDeclarationBuilder();

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 protected  de.monticore.lang.sd4development._ast.ASTSDVariableDeclarationBuilder _sDVariableDeclarationBuilder ()

 {
    /* generated by template mill.ProtectedBuilderMethod*/

  return new de.monticore.lang.sd4development._ast.ASTSDVariableDeclarationBuilder();
}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  static  String prettyPrint (de.monticore.ast.ASTNode node,boolean printComments)

 {
    /* generated by template mill.PrettyPrintBuilderMethod*/
/*
* Static getter for the pretty printer that delegates to the non static implementation.
* Only two pretty printer objects are created and reused.
* @param printComments Whether comments should be printed
* @return the pretty printer instance
*/

  if (millSD4DevelopmentFullPrettyPrinter == null) {
    millSD4DevelopmentFullPrettyPrinter = getMill();
    millSD4DevelopmentFullPrettyPrinter.fullPrettyPrinter = null; // reset cached
  }
  return millSD4DevelopmentFullPrettyPrinter._prettyPrint(node, printComments);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 protected  String _prettyPrint (de.monticore.ast.ASTNode node,boolean printComments)

 {
    /* generated by template mill.PrettyPrintProtectedBuilderMethod*/

  if (fullPrettyPrinter == null) {
    fullPrettyPrinter = new de.monticore.lang.sd4development._prettyprint.SD4DevelopmentFullPrettyPrinter(new de.monticore.prettyprint.IndentPrinter(), false);
  }
  fullPrettyPrinter.setPrintComments(printComments);
  return fullPrettyPrinter.prettyprint(node);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  static  de.monticore.lang.sd4development._util.SD4DevelopmentTypeDispatcher typeDispatcher ()

 {
    /* generated by template mill.BuilderMethod*/

  if (millSD4DevelopmentTypeDispatcher == null) {
    millSD4DevelopmentTypeDispatcher = getMill();
  }
  return millSD4DevelopmentTypeDispatcher._typeDispatcher();

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 protected  de.monticore.lang.sd4development._util.SD4DevelopmentTypeDispatcher _typeDispatcher ()

 {
    /* generated by template mill.TypeDispatcherGetter*/


if (millSD4DevelopmentTypeDispatcher.typeDispatcher == null) {
millSD4DevelopmentTypeDispatcher.typeDispatcher = new de.monticore.lang.sd4development._util.SD4DevelopmentTypeDispatcher();
}
return millSD4DevelopmentTypeDispatcher.typeDispatcher;
}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  static  de.monticore.lang.sd4development._visitor.SD4DevelopmentTraverser traverser ()

 {
    /* generated by template mill.BuilderMethod*/

  if (millSD4DevelopmentTraverserImplementation == null) {
    millSD4DevelopmentTraverserImplementation = getMill();
  }
  return millSD4DevelopmentTraverserImplementation._traverser();

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 protected  de.monticore.lang.sd4development._visitor.SD4DevelopmentTraverser _traverser ()

 {
    return new de.monticore.lang.sd4development._visitor.SD4DevelopmentTraverserImplementation();
}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  static  de.monticore.lang.sd4development._visitor.SD4DevelopmentTraverser inheritanceTraverser ()

 {
    /* generated by template mill.BuilderMethod*/

  if (millSD4DevelopmentInheritanceHandler == null) {
    millSD4DevelopmentInheritanceHandler = getMill();
  }
  return millSD4DevelopmentInheritanceHandler._inheritanceTraverser();

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 protected  de.monticore.lang.sd4development._visitor.SD4DevelopmentTraverser _inheritanceTraverser ()

 {
    /* generated by template mill.InheritanceHandlerMethod*/

  de.monticore.lang.sd4development._visitor.SD4DevelopmentTraverserImplementation traverser = new de.monticore.lang.sd4development._visitor.SD4DevelopmentTraverserImplementation();
  traverser.setSD4DevelopmentHandler(new de.monticore.lang.sd4development._visitor.SD4DevelopmentInheritanceHandler());
  traverser.setSDBasisHandler(new de.monticore.lang.sdbasis._visitor.SDBasisInheritanceHandler());
  traverser.setMCCommonLiteralsHandler(new de.monticore.literals.mccommonliterals._visitor.MCCommonLiteralsInheritanceHandler());
  traverser.setCommonExpressionsHandler(new de.monticore.expressions.commonexpressions._visitor.CommonExpressionsInheritanceHandler());
  traverser.setOCLExpressionsHandler(new de.monticore.ocl.oclexpressions._visitor.OCLExpressionsInheritanceHandler());
  traverser.setOOSymbolsHandler(new de.monticore.symbols.oosymbols._visitor.OOSymbolsInheritanceHandler());
  traverser.setMCBasicTypesHandler(new de.monticore.types.mcbasictypes._visitor.MCBasicTypesInheritanceHandler());
  traverser.setBasicSymbolsHandler(new de.monticore.symbols.basicsymbols._visitor.BasicSymbolsInheritanceHandler());
  traverser.setExpressionsBasisHandler(new de.monticore.expressions.expressionsbasis._visitor.ExpressionsBasisInheritanceHandler());
  traverser.setUMLStereotypeHandler(new de.monticore.umlstereotype._visitor.UMLStereotypeInheritanceHandler());
  traverser.setMCBasicsHandler(new de.monticore.mcbasics._visitor.MCBasicsInheritanceHandler());
  traverser.setMCLiteralsBasisHandler(new de.monticore.literals.mcliteralsbasis._visitor.MCLiteralsBasisInheritanceHandler());
  return traverser;
}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  static  de.monticore.lang.sd4development._symboltable.ISD4DevelopmentGlobalScope globalScope ()

 {
    /* generated by template mill.BuilderMethod*/

  if (millSD4DevelopmentGlobalScope == null) {
    millSD4DevelopmentGlobalScope = getMill();
  }
  return millSD4DevelopmentGlobalScope._globalScope();

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 protected  de.monticore.lang.sd4development._symboltable.ISD4DevelopmentGlobalScope _globalScope ()

 {
    /* generated by template mill.ProtectedGlobalScopeMethod*/

  if(null == sD4DevelopmentGlobalScope){
    sD4DevelopmentGlobalScope = new de.monticore.lang.sd4development._symboltable.SD4DevelopmentGlobalScope();
  }
  return sD4DevelopmentGlobalScope;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  static  de.monticore.lang.sd4development._symboltable.ISD4DevelopmentArtifactScope artifactScope ()

 {
    /* generated by template mill.BuilderMethod*/

  if (millSD4DevelopmentArtifactScope == null) {
    millSD4DevelopmentArtifactScope = getMill();
  }
  return millSD4DevelopmentArtifactScope._artifactScope();

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 protected  de.monticore.lang.sd4development._symboltable.ISD4DevelopmentArtifactScope _artifactScope ()

 {
    /* generated by template mill.ProtectedBuilderMethod*/

  return new de.monticore.lang.sd4development._symboltable.SD4DevelopmentArtifactScope();
}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  static  de.monticore.lang.sd4development._parser.SD4DevelopmentParser parser ()

 {
    /* generated by template mill.BuilderMethod*/

  if (millSD4DevelopmentParser == null) {
    millSD4DevelopmentParser = getMill();
  }
  return millSD4DevelopmentParser._parser();

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 protected  de.monticore.lang.sd4development._parser.SD4DevelopmentParser _parser ()

 {
    /* generated by template mill.ProtectedParserMethod*/

  return new de.monticore.lang.sd4development._parser.SD4DevelopmentParser();
}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  static  de.monticore.lang.sd4development._symboltable.ISD4DevelopmentScope scope ()

 {
    /* generated by template mill.BuilderMethod*/

  if (millSD4DevelopmentScope == null) {
    millSD4DevelopmentScope = getMill();
  }
  return millSD4DevelopmentScope._scope();

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 protected  de.monticore.lang.sd4development._symboltable.ISD4DevelopmentScope _scope ()

 {
    /* generated by template mill.ProtectedBuilderMethod*/

  return new de.monticore.lang.sd4development._symboltable.SD4DevelopmentScope();
}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  static  de.monticore.lang.sd4development._symboltable.SD4DevelopmentScopesGenitor scopesGenitor ()

 {
    /* generated by template mill.BuilderMethod*/

  if (millSD4DevelopmentScopesGenitor == null) {
    millSD4DevelopmentScopesGenitor = getMill();
  }
  return millSD4DevelopmentScopesGenitor._scopesGenitor();

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 protected  de.monticore.lang.sd4development._symboltable.SD4DevelopmentScopesGenitor _scopesGenitor ()

 {
    /* generated by template mill.ProtectedBuilderMethod*/

  return new de.monticore.lang.sd4development._symboltable.SD4DevelopmentScopesGenitor();
}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  static  de.monticore.lang.sd4development._symboltable.SD4DevelopmentScopesGenitorDelegator scopesGenitorDelegator ()

 {
    /* generated by template mill.BuilderMethod*/

  if (millSD4DevelopmentScopesGenitorDelegator == null) {
    millSD4DevelopmentScopesGenitorDelegator = getMill();
  }
  return millSD4DevelopmentScopesGenitorDelegator._scopesGenitorDelegator();

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 protected  de.monticore.lang.sd4development._symboltable.SD4DevelopmentScopesGenitorDelegator _scopesGenitorDelegator ()

 {
    /* generated by template mill.ProtectedBuilderMethod*/

  return new de.monticore.lang.sd4development._symboltable.SD4DevelopmentScopesGenitorDelegator();
}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  static  de.monticore.lang.sdbasis._ast.ASTSDArtifactBuilder sDArtifactBuilder ()

 {
    /* generated by template mill.BuilderDelegatorMethod*/

  return de.monticore.lang.sdbasis.SDBasisMill.sDArtifactBuilder();
}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  static  de.monticore.lang.sdbasis._ast.ASTSequenceDiagramBuilder sequenceDiagramBuilder ()

 {
    /* generated by template mill.BuilderDelegatorMethod*/

  return de.monticore.lang.sdbasis.SDBasisMill.sequenceDiagramBuilder();
}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  static  de.monticore.lang.sdbasis._ast.ASTSDBodyBuilder sDBodyBuilder ()

 {
    /* generated by template mill.BuilderDelegatorMethod*/

  return de.monticore.lang.sdbasis.SDBasisMill.sDBodyBuilder();
}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  static  de.monticore.lang.sdbasis._ast.ASTSDCompleteModifierBuilder sDCompleteModifierBuilder ()

 {
    /* generated by template mill.BuilderDelegatorMethod*/

  return de.monticore.lang.sdbasis.SDBasisMill.sDCompleteModifierBuilder();
}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  static  de.monticore.lang.sdbasis._ast.ASTSDFreeModifierBuilder sDFreeModifierBuilder ()

 {
    /* generated by template mill.BuilderDelegatorMethod*/

  return de.monticore.lang.sdbasis.SDBasisMill.sDFreeModifierBuilder();
}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  static  de.monticore.lang.sdbasis._ast.ASTSDInitialModifierBuilder sDInitialModifierBuilder ()

 {
    /* generated by template mill.BuilderDelegatorMethod*/

  return de.monticore.lang.sdbasis.SDBasisMill.sDInitialModifierBuilder();
}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  static  de.monticore.lang.sdbasis._ast.ASTSDVisibleModifierBuilder sDVisibleModifierBuilder ()

 {
    /* generated by template mill.BuilderDelegatorMethod*/

  return de.monticore.lang.sdbasis.SDBasisMill.sDVisibleModifierBuilder();
}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  static  de.monticore.lang.sdbasis._ast.ASTSDObjectBuilder sDObjectBuilder ()

 {
    /* generated by template mill.BuilderDelegatorMethod*/

  return de.monticore.lang.sdbasis.SDBasisMill.sDObjectBuilder();
}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  static  de.monticore.lang.sdbasis._ast.ASTSDObjectSourceBuilder sDObjectSourceBuilder ()

 {
    /* generated by template mill.BuilderDelegatorMethod*/

  return de.monticore.lang.sdbasis.SDBasisMill.sDObjectSourceBuilder();
}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  static  de.monticore.lang.sdbasis._ast.ASTSDObjectTargetBuilder sDObjectTargetBuilder ()

 {
    /* generated by template mill.BuilderDelegatorMethod*/

  return de.monticore.lang.sdbasis.SDBasisMill.sDObjectTargetBuilder();
}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  static  de.monticore.lang.sdbasis._ast.ASTSDSendMessageBuilder sDSendMessageBuilder ()

 {
    /* generated by template mill.BuilderDelegatorMethod*/

  return de.monticore.lang.sdbasis.SDBasisMill.sDSendMessageBuilder();
}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  static  de.monticore.lang.sdbasis._ast.ASTSDActivityBarBuilder sDActivityBarBuilder ()

 {
    /* generated by template mill.BuilderDelegatorMethod*/

  return de.monticore.lang.sdbasis.SDBasisMill.sDActivityBarBuilder();
}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  static  de.monticore.literals.mccommonliterals._ast.ASTNullLiteralBuilder nullLiteralBuilder ()

 {
    /* generated by template mill.BuilderDelegatorMethod*/

  return de.monticore.literals.mccommonliterals.MCCommonLiteralsMill.nullLiteralBuilder();
}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  static  de.monticore.literals.mccommonliterals._ast.ASTBooleanLiteralBuilder booleanLiteralBuilder ()

 {
    /* generated by template mill.BuilderDelegatorMethod*/

  return de.monticore.literals.mccommonliterals.MCCommonLiteralsMill.booleanLiteralBuilder();
}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  static  de.monticore.literals.mccommonliterals._ast.ASTCharLiteralBuilder charLiteralBuilder ()

 {
    /* generated by template mill.BuilderDelegatorMethod*/

  return de.monticore.literals.mccommonliterals.MCCommonLiteralsMill.charLiteralBuilder();
}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  static  de.monticore.literals.mccommonliterals._ast.ASTStringLiteralBuilder stringLiteralBuilder ()

 {
    /* generated by template mill.BuilderDelegatorMethod*/

  return de.monticore.literals.mccommonliterals.MCCommonLiteralsMill.stringLiteralBuilder();
}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  static  de.monticore.literals.mccommonliterals._ast.ASTNatLiteralBuilder natLiteralBuilder ()

 {
    /* generated by template mill.BuilderDelegatorMethod*/

  return de.monticore.literals.mccommonliterals.MCCommonLiteralsMill.natLiteralBuilder();
}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  static  de.monticore.literals.mccommonliterals._ast.ASTSignedNatLiteralBuilder signedNatLiteralBuilder ()

 {
    /* generated by template mill.BuilderDelegatorMethod*/

  return de.monticore.literals.mccommonliterals.MCCommonLiteralsMill.signedNatLiteralBuilder();
}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  static  de.monticore.literals.mccommonliterals._ast.ASTBasicLongLiteralBuilder basicLongLiteralBuilder ()

 {
    /* generated by template mill.BuilderDelegatorMethod*/

  return de.monticore.literals.mccommonliterals.MCCommonLiteralsMill.basicLongLiteralBuilder();
}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  static  de.monticore.literals.mccommonliterals._ast.ASTSignedBasicLongLiteralBuilder signedBasicLongLiteralBuilder ()

 {
    /* generated by template mill.BuilderDelegatorMethod*/

  return de.monticore.literals.mccommonliterals.MCCommonLiteralsMill.signedBasicLongLiteralBuilder();
}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  static  de.monticore.literals.mccommonliterals._ast.ASTBasicFloatLiteralBuilder basicFloatLiteralBuilder ()

 {
    /* generated by template mill.BuilderDelegatorMethod*/

  return de.monticore.literals.mccommonliterals.MCCommonLiteralsMill.basicFloatLiteralBuilder();
}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  static  de.monticore.literals.mccommonliterals._ast.ASTSignedBasicFloatLiteralBuilder signedBasicFloatLiteralBuilder ()

 {
    /* generated by template mill.BuilderDelegatorMethod*/

  return de.monticore.literals.mccommonliterals.MCCommonLiteralsMill.signedBasicFloatLiteralBuilder();
}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  static  de.monticore.literals.mccommonliterals._ast.ASTBasicDoubleLiteralBuilder basicDoubleLiteralBuilder ()

 {
    /* generated by template mill.BuilderDelegatorMethod*/

  return de.monticore.literals.mccommonliterals.MCCommonLiteralsMill.basicDoubleLiteralBuilder();
}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  static  de.monticore.literals.mccommonliterals._ast.ASTSignedBasicDoubleLiteralBuilder signedBasicDoubleLiteralBuilder ()

 {
    /* generated by template mill.BuilderDelegatorMethod*/

  return de.monticore.literals.mccommonliterals.MCCommonLiteralsMill.signedBasicDoubleLiteralBuilder();
}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  static  de.monticore.expressions.commonexpressions._ast.ASTCallExpressionBuilder callExpressionBuilder ()

 {
    /* generated by template mill.BuilderDelegatorMethod*/

  return de.monticore.expressions.commonexpressions.CommonExpressionsMill.callExpressionBuilder();
}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  static  de.monticore.expressions.commonexpressions._ast.ASTFieldAccessExpressionBuilder fieldAccessExpressionBuilder ()

 {
    /* generated by template mill.BuilderDelegatorMethod*/

  return de.monticore.expressions.commonexpressions.CommonExpressionsMill.fieldAccessExpressionBuilder();
}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  static  de.monticore.expressions.commonexpressions._ast.ASTPlusPrefixExpressionBuilder plusPrefixExpressionBuilder ()

 {
    /* generated by template mill.BuilderDelegatorMethod*/

  return de.monticore.expressions.commonexpressions.CommonExpressionsMill.plusPrefixExpressionBuilder();
}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  static  de.monticore.expressions.commonexpressions._ast.ASTMinusPrefixExpressionBuilder minusPrefixExpressionBuilder ()

 {
    /* generated by template mill.BuilderDelegatorMethod*/

  return de.monticore.expressions.commonexpressions.CommonExpressionsMill.minusPrefixExpressionBuilder();
}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  static  de.monticore.expressions.commonexpressions._ast.ASTBooleanNotExpressionBuilder booleanNotExpressionBuilder ()

 {
    /* generated by template mill.BuilderDelegatorMethod*/

  return de.monticore.expressions.commonexpressions.CommonExpressionsMill.booleanNotExpressionBuilder();
}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  static  de.monticore.expressions.commonexpressions._ast.ASTLogicalNotExpressionBuilder logicalNotExpressionBuilder ()

 {
    /* generated by template mill.BuilderDelegatorMethod*/

  return de.monticore.expressions.commonexpressions.CommonExpressionsMill.logicalNotExpressionBuilder();
}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  static  de.monticore.expressions.commonexpressions._ast.ASTMultExpressionBuilder multExpressionBuilder ()

 {
    /* generated by template mill.BuilderDelegatorMethod*/

  return de.monticore.expressions.commonexpressions.CommonExpressionsMill.multExpressionBuilder();
}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  static  de.monticore.expressions.commonexpressions._ast.ASTDivideExpressionBuilder divideExpressionBuilder ()

 {
    /* generated by template mill.BuilderDelegatorMethod*/

  return de.monticore.expressions.commonexpressions.CommonExpressionsMill.divideExpressionBuilder();
}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  static  de.monticore.expressions.commonexpressions._ast.ASTModuloExpressionBuilder moduloExpressionBuilder ()

 {
    /* generated by template mill.BuilderDelegatorMethod*/

  return de.monticore.expressions.commonexpressions.CommonExpressionsMill.moduloExpressionBuilder();
}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  static  de.monticore.expressions.commonexpressions._ast.ASTPlusExpressionBuilder plusExpressionBuilder ()

 {
    /* generated by template mill.BuilderDelegatorMethod*/

  return de.monticore.expressions.commonexpressions.CommonExpressionsMill.plusExpressionBuilder();
}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  static  de.monticore.expressions.commonexpressions._ast.ASTMinusExpressionBuilder minusExpressionBuilder ()

 {
    /* generated by template mill.BuilderDelegatorMethod*/

  return de.monticore.expressions.commonexpressions.CommonExpressionsMill.minusExpressionBuilder();
}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  static  de.monticore.expressions.commonexpressions._ast.ASTLessEqualExpressionBuilder lessEqualExpressionBuilder ()

 {
    /* generated by template mill.BuilderDelegatorMethod*/

  return de.monticore.expressions.commonexpressions.CommonExpressionsMill.lessEqualExpressionBuilder();
}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  static  de.monticore.expressions.commonexpressions._ast.ASTGreaterEqualExpressionBuilder greaterEqualExpressionBuilder ()

 {
    /* generated by template mill.BuilderDelegatorMethod*/

  return de.monticore.expressions.commonexpressions.CommonExpressionsMill.greaterEqualExpressionBuilder();
}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  static  de.monticore.expressions.commonexpressions._ast.ASTLessThanExpressionBuilder lessThanExpressionBuilder ()

 {
    /* generated by template mill.BuilderDelegatorMethod*/

  return de.monticore.expressions.commonexpressions.CommonExpressionsMill.lessThanExpressionBuilder();
}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  static  de.monticore.expressions.commonexpressions._ast.ASTGreaterThanExpressionBuilder greaterThanExpressionBuilder ()

 {
    /* generated by template mill.BuilderDelegatorMethod*/

  return de.monticore.expressions.commonexpressions.CommonExpressionsMill.greaterThanExpressionBuilder();
}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  static  de.monticore.expressions.commonexpressions._ast.ASTEqualsExpressionBuilder equalsExpressionBuilder ()

 {
    /* generated by template mill.BuilderDelegatorMethod*/

  return de.monticore.expressions.commonexpressions.CommonExpressionsMill.equalsExpressionBuilder();
}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  static  de.monticore.expressions.commonexpressions._ast.ASTNotEqualsExpressionBuilder notEqualsExpressionBuilder ()

 {
    /* generated by template mill.BuilderDelegatorMethod*/

  return de.monticore.expressions.commonexpressions.CommonExpressionsMill.notEqualsExpressionBuilder();
}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  static  de.monticore.expressions.commonexpressions._ast.ASTBooleanAndOpExpressionBuilder booleanAndOpExpressionBuilder ()

 {
    /* generated by template mill.BuilderDelegatorMethod*/

  return de.monticore.expressions.commonexpressions.CommonExpressionsMill.booleanAndOpExpressionBuilder();
}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  static  de.monticore.expressions.commonexpressions._ast.ASTBooleanOrOpExpressionBuilder booleanOrOpExpressionBuilder ()

 {
    /* generated by template mill.BuilderDelegatorMethod*/

  return de.monticore.expressions.commonexpressions.CommonExpressionsMill.booleanOrOpExpressionBuilder();
}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  static  de.monticore.expressions.commonexpressions._ast.ASTConditionalExpressionBuilder conditionalExpressionBuilder ()

 {
    /* generated by template mill.BuilderDelegatorMethod*/

  return de.monticore.expressions.commonexpressions.CommonExpressionsMill.conditionalExpressionBuilder();
}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  static  de.monticore.expressions.commonexpressions._ast.ASTBracketExpressionBuilder bracketExpressionBuilder ()

 {
    /* generated by template mill.BuilderDelegatorMethod*/

  return de.monticore.expressions.commonexpressions.CommonExpressionsMill.bracketExpressionBuilder();
}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  static  de.monticore.expressions.commonexpressions._ast.ASTArrayAccessExpressionBuilder arrayAccessExpressionBuilder ()

 {
    /* generated by template mill.BuilderDelegatorMethod*/

  return de.monticore.expressions.commonexpressions.CommonExpressionsMill.arrayAccessExpressionBuilder();
}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  static  de.monticore.ocl.oclexpressions._ast.ASTOCLVariableDeclarationBuilder oCLVariableDeclarationBuilder ()

 {
    /* generated by template mill.BuilderDelegatorMethod*/

  return de.monticore.ocl.oclexpressions.OCLExpressionsMill.oCLVariableDeclarationBuilder();
}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  static  de.monticore.ocl.oclexpressions._ast.ASTTypeIfExpressionBuilder typeIfExpressionBuilder ()

 {
    /* generated by template mill.BuilderDelegatorMethod*/

  return de.monticore.ocl.oclexpressions.OCLExpressionsMill.typeIfExpressionBuilder();
}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  static  de.monticore.ocl.oclexpressions._ast.ASTTypeIfThenExpressionBuilder typeIfThenExpressionBuilder ()

 {
    /* generated by template mill.BuilderDelegatorMethod*/

  return de.monticore.ocl.oclexpressions.OCLExpressionsMill.typeIfThenExpressionBuilder();
}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  static  de.monticore.ocl.oclexpressions._ast.ASTIfThenElseExpressionBuilder ifThenElseExpressionBuilder ()

 {
    /* generated by template mill.BuilderDelegatorMethod*/

  return de.monticore.ocl.oclexpressions.OCLExpressionsMill.ifThenElseExpressionBuilder();
}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  static  de.monticore.ocl.oclexpressions._ast.ASTImpliesExpressionBuilder impliesExpressionBuilder ()

 {
    /* generated by template mill.BuilderDelegatorMethod*/

  return de.monticore.ocl.oclexpressions.OCLExpressionsMill.impliesExpressionBuilder();
}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  static  de.monticore.ocl.oclexpressions._ast.ASTEquivalentExpressionBuilder equivalentExpressionBuilder ()

 {
    /* generated by template mill.BuilderDelegatorMethod*/

  return de.monticore.ocl.oclexpressions.OCLExpressionsMill.equivalentExpressionBuilder();
}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  static  de.monticore.ocl.oclexpressions._ast.ASTForallExpressionBuilder forallExpressionBuilder ()

 {
    /* generated by template mill.BuilderDelegatorMethod*/

  return de.monticore.ocl.oclexpressions.OCLExpressionsMill.forallExpressionBuilder();
}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  static  de.monticore.ocl.oclexpressions._ast.ASTExistsExpressionBuilder existsExpressionBuilder ()

 {
    /* generated by template mill.BuilderDelegatorMethod*/

  return de.monticore.ocl.oclexpressions.OCLExpressionsMill.existsExpressionBuilder();
}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  static  de.monticore.ocl.oclexpressions._ast.ASTAnyExpressionBuilder anyExpressionBuilder ()

 {
    /* generated by template mill.BuilderDelegatorMethod*/

  return de.monticore.ocl.oclexpressions.OCLExpressionsMill.anyExpressionBuilder();
}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  static  de.monticore.ocl.oclexpressions._ast.ASTLetinExpressionBuilder letinExpressionBuilder ()

 {
    /* generated by template mill.BuilderDelegatorMethod*/

  return de.monticore.ocl.oclexpressions.OCLExpressionsMill.letinExpressionBuilder();
}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  static  de.monticore.ocl.oclexpressions._ast.ASTIterateExpressionBuilder iterateExpressionBuilder ()

 {
    /* generated by template mill.BuilderDelegatorMethod*/

  return de.monticore.ocl.oclexpressions.OCLExpressionsMill.iterateExpressionBuilder();
}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  static  de.monticore.ocl.oclexpressions._ast.ASTInDeclarationBuilder inDeclarationBuilder ()

 {
    /* generated by template mill.BuilderDelegatorMethod*/

  return de.monticore.ocl.oclexpressions.OCLExpressionsMill.inDeclarationBuilder();
}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  static  de.monticore.ocl.oclexpressions._ast.ASTInDeclarationVariableBuilder inDeclarationVariableBuilder ()

 {
    /* generated by template mill.BuilderDelegatorMethod*/

  return de.monticore.ocl.oclexpressions.OCLExpressionsMill.inDeclarationVariableBuilder();
}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  static  de.monticore.ocl.oclexpressions._ast.ASTOCLAtPreQualificationBuilder oCLAtPreQualificationBuilder ()

 {
    /* generated by template mill.BuilderDelegatorMethod*/

  return de.monticore.ocl.oclexpressions.OCLExpressionsMill.oCLAtPreQualificationBuilder();
}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  static  de.monticore.ocl.oclexpressions._ast.ASTOCLTransitiveQualificationBuilder oCLTransitiveQualificationBuilder ()

 {
    /* generated by template mill.BuilderDelegatorMethod*/

  return de.monticore.ocl.oclexpressions.OCLExpressionsMill.oCLTransitiveQualificationBuilder();
}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  static  de.monticore.symbols.oosymbols._symboltable.OOTypeSymbolBuilder oOTypeSymbolBuilder ()

 {
    return de.monticore.symbols.oosymbols.OOSymbolsMill.oOTypeSymbolBuilder();
}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  static  de.monticore.symbols.oosymbols._symboltable.OOTypeSymbolSurrogateBuilder oOTypeSymbolSurrogateBuilder ()

 {
    return de.monticore.symbols.oosymbols.OOSymbolsMill.oOTypeSymbolSurrogateBuilder();
}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  static  de.monticore.symbols.oosymbols._symboltable.FieldSymbolBuilder fieldSymbolBuilder ()

 {
    return de.monticore.symbols.oosymbols.OOSymbolsMill.fieldSymbolBuilder();
}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  static  de.monticore.symbols.oosymbols._symboltable.FieldSymbolSurrogateBuilder fieldSymbolSurrogateBuilder ()

 {
    return de.monticore.symbols.oosymbols.OOSymbolsMill.fieldSymbolSurrogateBuilder();
}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  static  de.monticore.symbols.oosymbols._symboltable.MethodSymbolBuilder methodSymbolBuilder ()

 {
    return de.monticore.symbols.oosymbols.OOSymbolsMill.methodSymbolBuilder();
}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  static  de.monticore.symbols.oosymbols._symboltable.MethodSymbolSurrogateBuilder methodSymbolSurrogateBuilder ()

 {
    return de.monticore.symbols.oosymbols.OOSymbolsMill.methodSymbolSurrogateBuilder();
}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  static  de.monticore.types.mcbasictypes._ast.ASTMCQualifiedNameBuilder mCQualifiedNameBuilder ()

 {
    /* generated by template mill.BuilderDelegatorMethod*/

  return de.monticore.types.mcbasictypes.MCBasicTypesMill.mCQualifiedNameBuilder();
}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  static  de.monticore.types.mcbasictypes._ast.ASTMCPackageDeclarationBuilder mCPackageDeclarationBuilder ()

 {
    /* generated by template mill.BuilderDelegatorMethod*/

  return de.monticore.types.mcbasictypes.MCBasicTypesMill.mCPackageDeclarationBuilder();
}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  static  de.monticore.types.mcbasictypes._ast.ASTMCImportStatementBuilder mCImportStatementBuilder ()

 {
    /* generated by template mill.BuilderDelegatorMethod*/

  return de.monticore.types.mcbasictypes.MCBasicTypesMill.mCImportStatementBuilder();
}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  static  de.monticore.types.mcbasictypes._ast.ASTMCPrimitiveTypeBuilder mCPrimitiveTypeBuilder ()

 {
    /* generated by template mill.BuilderDelegatorMethod*/

  return de.monticore.types.mcbasictypes.MCBasicTypesMill.mCPrimitiveTypeBuilder();
}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  static  de.monticore.types.mcbasictypes._ast.ASTMCQualifiedTypeBuilder mCQualifiedTypeBuilder ()

 {
    /* generated by template mill.BuilderDelegatorMethod*/

  return de.monticore.types.mcbasictypes.MCBasicTypesMill.mCQualifiedTypeBuilder();
}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  static  de.monticore.types.mcbasictypes._ast.ASTMCReturnTypeBuilder mCReturnTypeBuilder ()

 {
    /* generated by template mill.BuilderDelegatorMethod*/

  return de.monticore.types.mcbasictypes.MCBasicTypesMill.mCReturnTypeBuilder();
}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  static  de.monticore.types.mcbasictypes._ast.ASTMCVoidTypeBuilder mCVoidTypeBuilder ()

 {
    /* generated by template mill.BuilderDelegatorMethod*/

  return de.monticore.types.mcbasictypes.MCBasicTypesMill.mCVoidTypeBuilder();
}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  static  de.monticore.symbols.basicsymbols._symboltable.DiagramSymbolBuilder diagramSymbolBuilder ()

 {
    return de.monticore.symbols.basicsymbols.BasicSymbolsMill.diagramSymbolBuilder();
}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  static  de.monticore.symbols.basicsymbols._symboltable.DiagramSymbolSurrogateBuilder diagramSymbolSurrogateBuilder ()

 {
    return de.monticore.symbols.basicsymbols.BasicSymbolsMill.diagramSymbolSurrogateBuilder();
}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  static  de.monticore.symbols.basicsymbols._symboltable.TypeSymbolBuilder typeSymbolBuilder ()

 {
    return de.monticore.symbols.basicsymbols.BasicSymbolsMill.typeSymbolBuilder();
}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  static  de.monticore.symbols.basicsymbols._symboltable.TypeSymbolSurrogateBuilder typeSymbolSurrogateBuilder ()

 {
    return de.monticore.symbols.basicsymbols.BasicSymbolsMill.typeSymbolSurrogateBuilder();
}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  static  de.monticore.symbols.basicsymbols._symboltable.TypeVarSymbolBuilder typeVarSymbolBuilder ()

 {
    return de.monticore.symbols.basicsymbols.BasicSymbolsMill.typeVarSymbolBuilder();
}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  static  de.monticore.symbols.basicsymbols._symboltable.TypeVarSymbolSurrogateBuilder typeVarSymbolSurrogateBuilder ()

 {
    return de.monticore.symbols.basicsymbols.BasicSymbolsMill.typeVarSymbolSurrogateBuilder();
}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  static  de.monticore.symbols.basicsymbols._symboltable.VariableSymbolBuilder variableSymbolBuilder ()

 {
    return de.monticore.symbols.basicsymbols.BasicSymbolsMill.variableSymbolBuilder();
}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  static  de.monticore.symbols.basicsymbols._symboltable.VariableSymbolSurrogateBuilder variableSymbolSurrogateBuilder ()

 {
    return de.monticore.symbols.basicsymbols.BasicSymbolsMill.variableSymbolSurrogateBuilder();
}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  static  de.monticore.symbols.basicsymbols._symboltable.FunctionSymbolBuilder functionSymbolBuilder ()

 {
    return de.monticore.symbols.basicsymbols.BasicSymbolsMill.functionSymbolBuilder();
}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  static  de.monticore.symbols.basicsymbols._symboltable.FunctionSymbolSurrogateBuilder functionSymbolSurrogateBuilder ()

 {
    return de.monticore.symbols.basicsymbols.BasicSymbolsMill.functionSymbolSurrogateBuilder();
}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  static  de.monticore.expressions.expressionsbasis._ast.ASTNameExpressionBuilder nameExpressionBuilder ()

 {
    /* generated by template mill.BuilderDelegatorMethod*/

  return de.monticore.expressions.expressionsbasis.ExpressionsBasisMill.nameExpressionBuilder();
}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  static  de.monticore.expressions.expressionsbasis._ast.ASTLiteralExpressionBuilder literalExpressionBuilder ()

 {
    /* generated by template mill.BuilderDelegatorMethod*/

  return de.monticore.expressions.expressionsbasis.ExpressionsBasisMill.literalExpressionBuilder();
}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  static  de.monticore.expressions.expressionsbasis._ast.ASTArgumentsBuilder argumentsBuilder ()

 {
    /* generated by template mill.BuilderDelegatorMethod*/

  return de.monticore.expressions.expressionsbasis.ExpressionsBasisMill.argumentsBuilder();
}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  static  de.monticore.umlstereotype._ast.ASTStereotypeBuilder stereotypeBuilder ()

 {
    /* generated by template mill.BuilderDelegatorMethod*/

  return de.monticore.umlstereotype.UMLStereotypeMill.stereotypeBuilder();
}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  static  de.monticore.umlstereotype._ast.ASTStereoValueBuilder stereoValueBuilder ()

 {
    /* generated by template mill.BuilderDelegatorMethod*/

  return de.monticore.umlstereotype.UMLStereotypeMill.stereoValueBuilder();
}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  static  void initMe (SD4DevelopmentMill a)

 {
    /* generated by template mill.InitMeMethod*/

    mill = a;
    millASTSDCallBuilder = a;
    millASTSDNewBuilder = a;
    millASTSDReturnBuilder = a;
    millASTSDThrowBuilder = a;
    millASTSDEndCallBuilder = a;
    millASTSDEndCallArrowBuilder = a;
    millASTSDIncompleteExpressionBuilder = a;
    millASTSDClassBuilder = a;
    millASTSDConditionBuilder = a;
    millASTSDVariableDeclarationBuilder = a;
    millSD4DevelopmentTraverserImplementation = a;
    millSD4DevelopmentInheritanceHandler = a;
    millSD4DevelopmentScope = a;
    millSD4DevelopmentScopesGenitorDelegator = a;
    millSD4DevelopmentArtifactScope = a;
    millSD4DevelopmentGlobalScope = a;
    millSD4DevelopmentScopesGenitor = a;
    millSD4DevelopmentFullPrettyPrinter = a;
    millSD4DevelopmentTypeDispatcher = a;
    millSD4DevelopmentParser = a;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  static  void reset ()

 {
    /* generated by template mill.ResetMethod*/

    mill = null;
    millASTSDCallBuilder = null;
    millASTSDNewBuilder = null;
    millASTSDReturnBuilder = null;
    millASTSDThrowBuilder = null;
    millASTSDEndCallBuilder = null;
    millASTSDEndCallArrowBuilder = null;
    millASTSDIncompleteExpressionBuilder = null;
    millASTSDClassBuilder = null;
    millASTSDConditionBuilder = null;
    millASTSDVariableDeclarationBuilder = null;
    millSD4DevelopmentTraverserImplementation = null;
    millSD4DevelopmentInheritanceHandler = null;
    millSD4DevelopmentScope = null;
    millSD4DevelopmentScopesGenitorDelegator = null;
    millSD4DevelopmentArtifactScope = null;
    millSD4DevelopmentGlobalScope = null;
    millSD4DevelopmentScopesGenitor = null;
    millSD4DevelopmentFullPrettyPrinter = null;
    millSD4DevelopmentTypeDispatcher = null;
    millSD4DevelopmentParser = null;
    de.monticore.lang.sdbasis.SDBasisMill.reset();
    de.monticore.literals.mccommonliterals.MCCommonLiteralsMill.reset();
    de.monticore.expressions.commonexpressions.CommonExpressionsMill.reset();
    de.monticore.ocl.oclexpressions.OCLExpressionsMill.reset();
    de.monticore.symbols.oosymbols.OOSymbolsMill.reset();
    de.monticore.types.mcbasictypes.MCBasicTypesMill.reset();
    de.monticore.symbols.basicsymbols.BasicSymbolsMill.reset();
    de.monticore.expressions.expressionsbasis.ExpressionsBasisMill.reset();
    de.monticore.umlstereotype.UMLStereotypeMill.reset();
    de.monticore.mcbasics.MCBasicsMill.reset();
    de.monticore.literals.mcliteralsbasis.MCLiteralsBasisMill.reset();

}


}


