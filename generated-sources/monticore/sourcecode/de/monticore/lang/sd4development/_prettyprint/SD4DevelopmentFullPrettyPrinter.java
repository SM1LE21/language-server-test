/* generated from model SD4Development */
/* generated by template cd2java.Class*/

/* (c) https://github.com/MontiCore/monticore */

/* Hookpoint: ClassContent:addComment */

/* generated by template cd2java.Package*/
package de.monticore.lang.sd4development._prettyprint;


/* generated by template cd2java.Imports*/

import java.util.*;
import java.util.function.*;
import java.util.stream.Stream;
import de.se_rwth.commons.logging.Log;
import de.se_rwth.commons.SourcePosition;



/* Hookpoint: ClassContent:Imports */



/* Hookpoint: ClassContent:Annotations */

 public  class SD4DevelopmentFullPrettyPrinter  {

/* Hookpoint: ClassContent:Elements */

    /* generated by template cd2java.Attribute*/

/* Hookpoint: AttributeContent:Annotations */
 protected  de.monticore.prettyprint.IndentPrinter printer
  
;

    /* generated by template cd2java.Attribute*/

/* Hookpoint: AttributeContent:Annotations */
 protected  de.monticore.lang.sd4development._visitor.SD4DevelopmentTraverser traverser
  
;


    /* generated by template cd2java.Constructor*/
 public  SD4DevelopmentFullPrettyPrinter(de.monticore.prettyprint.IndentPrinter printer,boolean printComments)
 {
  /* generated by template _prettyprinter.full.FPPConstructor*/



/* Hookpoint: <Statement>*FPPConstructor:begin */
this.printer = printer;
this.traverser = de.monticore.lang.sd4development.SD4DevelopmentMill.traverser();

this.initializeTraverser(printComments);

/* Hookpoint: <Statement>*FPPConstructor:end */

}

    /* generated by template cd2java.Constructor*/
 public  SD4DevelopmentFullPrettyPrinter(de.monticore.prettyprint.IndentPrinter printer)
 {
  this(printer, true);
}


    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  de.monticore.prettyprint.IndentPrinter getPrinter ()

 {
    return this.printer;
}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  de.monticore.lang.sd4development._visitor.SD4DevelopmentTraverser getTraverser ()

 {
    return this.traverser;
}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  void setTraverser (de.monticore.lang.sd4development._visitor.SD4DevelopmentTraverser traverser)

 {
    this.traverser = traverser;
}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 protected  void initializeTraverser (boolean printComments)

 {
    /* generated by template _prettyprinter.full.FPPTraverserInit*/



SD4DevelopmentPrettyPrinter sD4Development = new SD4DevelopmentPrettyPrinter(getPrinter(), printComments);
getTraverser().setSD4DevelopmentHandler(sD4Development);
getTraverser().add4SD4Development(sD4Development);

// SuperGrammars
    de.monticore.lang.sdbasis._prettyprint.SDBasisPrettyPrinter sDBasis = new de.monticore.lang.sdbasis._prettyprint.SDBasisPrettyPrinter(getPrinter(), printComments)
        ;
    getTraverser().setSDBasisHandler(sDBasis);
    getTraverser().add4SDBasis(sDBasis);
    de.monticore.literals.mccommonliterals._prettyprint.MCCommonLiteralsPrettyPrinter mCCommonLiterals = new de.monticore.literals.mccommonliterals._prettyprint.MCCommonLiteralsPrettyPrinter(getPrinter(), printComments)
        ;
    getTraverser().setMCCommonLiteralsHandler(mCCommonLiterals);
    getTraverser().add4MCCommonLiterals(mCCommonLiterals);
    de.monticore.expressions.commonexpressions._prettyprint.CommonExpressionsPrettyPrinter commonExpressions = new de.monticore.expressions.commonexpressions._prettyprint.CommonExpressionsPrettyPrinter(getPrinter(), printComments)
        ;
    getTraverser().setCommonExpressionsHandler(commonExpressions);
    getTraverser().add4CommonExpressions(commonExpressions);
    de.monticore.ocl.oclexpressions._prettyprint.OCLExpressionsPrettyPrinter oCLExpressions = new de.monticore.ocl.oclexpressions._prettyprint.OCLExpressionsPrettyPrinter(getPrinter(), printComments)
        ;
    getTraverser().setOCLExpressionsHandler(oCLExpressions);
    getTraverser().add4OCLExpressions(oCLExpressions);
    de.monticore.symbols.oosymbols._prettyprint.OOSymbolsPrettyPrinter oOSymbols = new de.monticore.symbols.oosymbols._prettyprint.OOSymbolsPrettyPrinter(getPrinter(), printComments)
        ;
    getTraverser().setOOSymbolsHandler(oOSymbols);
    getTraverser().add4OOSymbols(oOSymbols);
    de.monticore.types.mcbasictypes._prettyprint.MCBasicTypesPrettyPrinter mCBasicTypes = new de.monticore.types.mcbasictypes._prettyprint.MCBasicTypesPrettyPrinter(getPrinter(), printComments)
        ;
    getTraverser().setMCBasicTypesHandler(mCBasicTypes);
    getTraverser().add4MCBasicTypes(mCBasicTypes);
    de.monticore.symbols.basicsymbols._prettyprint.BasicSymbolsPrettyPrinter basicSymbols = new de.monticore.symbols.basicsymbols._prettyprint.BasicSymbolsPrettyPrinter(getPrinter(), printComments)
        ;
    getTraverser().setBasicSymbolsHandler(basicSymbols);
    getTraverser().add4BasicSymbols(basicSymbols);
    de.monticore.expressions.expressionsbasis._prettyprint.ExpressionsBasisPrettyPrinter expressionsBasis = new de.monticore.expressions.expressionsbasis._prettyprint.ExpressionsBasisPrettyPrinter(getPrinter(), printComments)
        ;
    getTraverser().setExpressionsBasisHandler(expressionsBasis);
    getTraverser().add4ExpressionsBasis(expressionsBasis);
    de.monticore.umlstereotype._prettyprint.UMLStereotypePrettyPrinter uMLStereotype = new de.monticore.umlstereotype._prettyprint.UMLStereotypePrettyPrinter(getPrinter(), printComments)
        ;
    getTraverser().setUMLStereotypeHandler(uMLStereotype);
    getTraverser().add4UMLStereotype(uMLStereotype);
    de.monticore.mcbasics._prettyprint.MCBasicsPrettyPrinter mCBasics = new de.monticore.mcbasics._prettyprint.MCBasicsPrettyPrinter(getPrinter(), printComments)
        ;
    getTraverser().setMCBasicsHandler(mCBasics);
    getTraverser().add4MCBasics(mCBasics);
    de.monticore.literals.mcliteralsbasis._prettyprint.MCLiteralsBasisPrettyPrinter mCLiteralsBasis = new de.monticore.literals.mcliteralsbasis._prettyprint.MCLiteralsBasisPrettyPrinter(getPrinter(), printComments)
        ;
    getTraverser().setMCLiteralsBasisHandler(mCLiteralsBasis);
    getTraverser().add4MCLiteralsBasis(mCLiteralsBasis);

/* Hookpoint: <Statement>*FPPTraverserInit:end */

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  void setPrintComments (boolean printComments)

 {
    /* generated by template _prettyprinter.full.FPPSetPrintComments*/



((SD4DevelopmentPrettyPrinter)getTraverser().getSD4DevelopmentHandler().get()).setPrintComments(printComments);

// SuperGrammars
    ((de.monticore.lang.sdbasis._prettyprint.SDBasisPrettyPrinter)getTraverser().getSDBasisHandler().get()).setPrintComments(printComments);
    ((de.monticore.literals.mccommonliterals._prettyprint.MCCommonLiteralsPrettyPrinter)getTraverser().getMCCommonLiteralsHandler().get()).setPrintComments(printComments);
    ((de.monticore.expressions.commonexpressions._prettyprint.CommonExpressionsPrettyPrinter)getTraverser().getCommonExpressionsHandler().get()).setPrintComments(printComments);
    ((de.monticore.ocl.oclexpressions._prettyprint.OCLExpressionsPrettyPrinter)getTraverser().getOCLExpressionsHandler().get()).setPrintComments(printComments);
    ((de.monticore.symbols.oosymbols._prettyprint.OOSymbolsPrettyPrinter)getTraverser().getOOSymbolsHandler().get()).setPrintComments(printComments);
    ((de.monticore.types.mcbasictypes._prettyprint.MCBasicTypesPrettyPrinter)getTraverser().getMCBasicTypesHandler().get()).setPrintComments(printComments);
    ((de.monticore.symbols.basicsymbols._prettyprint.BasicSymbolsPrettyPrinter)getTraverser().getBasicSymbolsHandler().get()).setPrintComments(printComments);
    ((de.monticore.expressions.expressionsbasis._prettyprint.ExpressionsBasisPrettyPrinter)getTraverser().getExpressionsBasisHandler().get()).setPrintComments(printComments);
    ((de.monticore.umlstereotype._prettyprint.UMLStereotypePrettyPrinter)getTraverser().getUMLStereotypeHandler().get()).setPrintComments(printComments);
    ((de.monticore.mcbasics._prettyprint.MCBasicsPrettyPrinter)getTraverser().getMCBasicsHandler().get()).setPrintComments(printComments);
    ((de.monticore.literals.mcliteralsbasis._prettyprint.MCLiteralsBasisPrettyPrinter)getTraverser().getMCLiteralsBasisHandler().get()).setPrintComments(printComments);

/* Hookpoint: <Statement>*FPPSetComments:end */

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  String prettyprint (de.monticore.ast.ASTNode node)

 {
    /* generated by template _prettyprinter.full.FullPrettyPrintMethod*/
getPrinter().clearBuffer();
getTraverser().clearTraversedElements();
node.accept(getTraverser());

// do not overzealous strip trailing linebreaks, only trailing spaces within the last line
getPrinter().stripTrailing();
return getPrinter().getContent();

}


}


