/* generated by template cd2java.Class*/

/* (c) https://github.com/MontiCore/monticore */

/* Hookpoint: ClassContent:addComment */

/* generated by template cd2java.Package*/
package de.monticore;


/* generated by template cd2java.Imports*/

import java.util.*;
import java.util.function.*;
import java.util.stream.Stream;



/* Hookpoint: ClassContent:Imports */



/* Hookpoint: ClassContent:Annotations */

 public  class ExampleMonitor  {

/* Hookpoint: ClassContent:Elements */

    /* generated by template cd2java.Attribute*/

/* Hookpoint: AttributeContent:Annotations */
 private  final  static  String monitorName
 = " ExampleMonitor";

    /* generated by template cd2java.Attribute*/

/* Hookpoint: AttributeContent:Annotations */
 private  ExampleMonitorState currentState
 = ExampleMonitorState.CALL_SendConfirmation;



    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  String getMonitorName ()

 {
    /* generated by template methods.Get*/

return this.monitorName;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  void logBeginCSendConfirmation ()

 {
    /* generated by template sdgenerator.sd2test.MonitorBeginMethods*/


EqualityChecker e = new EqualityChecker();
if(this.currentState == ExampleMonitorState.CALL_SendConfirmation) {
this.currentState = currentState.next();
  System.out.println(monitorName + ": Expected transition SendConfirmation of C found");
}
else {
Log.error(monitorName + ": Incorrect transition SendConfirmation of C object reached");
}

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  void logBeginOOrderParts ()

 {
    /* generated by template sdgenerator.sd2test.MonitorBeginMethods*/


EqualityChecker e = new EqualityChecker();
if(this.currentState == ExampleMonitorState.CALL_OrderParts) {
this.currentState = currentState.next();
  System.out.println(monitorName + ": Expected transition OrderParts of O found");
}
else {
Log.error(monitorName + ": Incorrect transition OrderParts of O object reached");
}

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  void logBeginOShipItems ()

 {
    /* generated by template sdgenerator.sd2test.MonitorBeginMethods*/


EqualityChecker e = new EqualityChecker();
if(this.currentState == ExampleMonitorState.CALL_ShipItems) {
this.currentState = currentState.next();
  System.out.println(monitorName + ": Expected transition ShipItems of O found");
}
else {
Log.error(monitorName + ": Incorrect transition ShipItems of O object reached");
}

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  void logBeginCSendInvoice ()

 {
    /* generated by template sdgenerator.sd2test.MonitorBeginMethods*/


EqualityChecker e = new EqualityChecker();
if(this.currentState == ExampleMonitorState.CALL_SendInvoice) {
this.currentState = currentState.next();
  System.out.println(monitorName + ": Expected transition SendInvoice of C found");
}
else {
Log.error(monitorName + ": Incorrect transition SendInvoice of C object reached");
}

}


}


